var _user$project$Chore$makeId = function (chore) {
	return A2(
		_elm_lang$core$Basics_ops['++'],
		'chore-',
		_elm_lang$core$Basics$toString(chore.id));
};
var _user$project$Chore$onKeyDown = function (tagger) {
	return A2(
		_elm_lang$html$Html_Events$on,
		'keydown',
		A2(_elm_lang$core$Json_Decode$map, tagger, _elm_lang$html$Html_Events$keyCode));
};
var _user$project$Chore$description = function (chore) {
	var _p0 = chore;
	if (_p0.ctor === 'Nothing') {
		return '';
	} else {
		return _p0._0;
	}
};
var _user$project$Chore$subscriptions = function (chore) {
	return _elm_lang$core$Platform_Sub$none;
};
var _user$project$Chore$update = F2(
	function (msg, chore) {
		var _p1 = msg;
		switch (_p1.ctor) {
			case 'NoOp':
				return {ctor: '_Tuple2', _0: chore, _1: _elm_lang$core$Platform_Cmd$none};
			case 'DeleteChore':
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						chore,
						{chore: _elm_lang$core$Maybe$Nothing}),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			case 'RewriteChore':
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						chore,
						{changedchore: chore.chore}),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			case 'StoreChanges':
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						chore,
						{
							changedchore: _elm_lang$core$Maybe$Just(_p1._0)
						}),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			case 'CommitChange':
				var _p2 = chore.changedchore;
				if (_p2.ctor === 'Nothing') {
					return {ctor: '_Tuple2', _0: chore, _1: _elm_lang$core$Platform_Cmd$none};
				} else {
					var _p4 = _p2._0;
					var _p3 = _p4;
					if (_p3 === '') {
						return {
							ctor: '_Tuple2',
							_0: _elm_lang$core$Native_Utils.update(
								chore,
								{chore: _elm_lang$core$Maybe$Nothing}),
							_1: _elm_lang$core$Platform_Cmd$none
						};
					} else {
						return {
							ctor: '_Tuple2',
							_0: _elm_lang$core$Native_Utils.update(
								chore,
								{
									chore: _elm_lang$core$Maybe$Just(_p4),
									changedchore: _elm_lang$core$Maybe$Nothing
								}),
							_1: _elm_lang$core$Platform_Cmd$none
						};
					}
				}
			default:
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						chore,
						{completed: !chore.completed}),
					_1: _elm_lang$core$Platform_Cmd$none
				};
		}
	});
var _user$project$Chore$Chore = F4(
	function (a, b, c, d) {
		return {chore: a, id: b, completed: c, changedchore: d};
	});
var _user$project$Chore$init = F2(
	function (chore, id) {
		return A4(
			_user$project$Chore$Chore,
			_elm_lang$core$Maybe$Just(chore),
			id,
			false,
			_elm_lang$core$Maybe$Nothing);
	});
var _user$project$Chore$ToggleChore = {ctor: 'ToggleChore'};
var _user$project$Chore$DeleteChore = {ctor: 'DeleteChore'};
var _user$project$Chore$CommitChange = {ctor: 'CommitChange'};
var _user$project$Chore$StoreChanges = function (a) {
	return {ctor: 'StoreChanges', _0: a};
};
var _user$project$Chore$RewriteChore = {ctor: 'RewriteChore'};
var _user$project$Chore$NoOp = {ctor: 'NoOp'};
var _user$project$Chore$enterKey = F2(
	function (msg, $int) {
		return _elm_lang$core$Native_Utils.eq($int, 13) ? msg : _user$project$Chore$NoOp;
	});
var _user$project$Chore$view = function (chore) {
	var isbeingedited = function () {
		var _p5 = chore.changedchore;
		if (_p5.ctor === 'Nothing') {
			return false;
		} else {
			return true;
		}
	}();
	return A2(
		_elm_lang$html$Html$li,
		{ctor: '[]'},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$div,
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$classList(
						{
							ctor: '::',
							_0: {ctor: '_Tuple2', _0: 'chore', _1: true},
							_1: {
								ctor: '::',
								_0: {ctor: '_Tuple2', _0: 'completed', _1: chore.completed},
								_1: {ctor: '[]'}
							}
						}),
					_1: {
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$hidden(isbeingedited),
						_1: {ctor: '[]'}
					}
				},
				{
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$input,
						{
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$type_('checkbox'),
							_1: {
								ctor: '::',
								_0: _elm_lang$html$Html_Attributes$class('toggle'),
								_1: {
									ctor: '::',
									_0: _elm_lang$html$Html_Attributes$checked(chore.completed),
									_1: {
										ctor: '::',
										_0: _elm_lang$html$Html_Events$onClick(_user$project$Chore$ToggleChore),
										_1: {ctor: '[]'}
									}
								}
							}
						},
						{ctor: '[]'}),
					_1: {
						ctor: '::',
						_0: A2(
							_elm_lang$html$Html$label,
							{
								ctor: '::',
								_0: _elm_lang$html$Html_Events$onDoubleClick(_user$project$Chore$RewriteChore),
								_1: {ctor: '[]'}
							},
							{
								ctor: '::',
								_0: _elm_lang$html$Html$text(
									_user$project$Chore$description(chore.chore)),
								_1: {ctor: '[]'}
							}),
						_1: {
							ctor: '::',
							_0: A2(
								_elm_lang$html$Html$button,
								{
									ctor: '::',
									_0: _elm_lang$html$Html_Events$onClick(_user$project$Chore$DeleteChore),
									_1: {ctor: '[]'}
								},
								{
									ctor: '::',
									_0: _elm_lang$html$Html$text('Ã—'),
									_1: {ctor: '[]'}
								}),
							_1: {ctor: '[]'}
						}
					}
				}),
			_1: {
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$div,
					{
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$class('editing-chore'),
						_1: {
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$hidden(!isbeingedited),
							_1: {ctor: '[]'}
						}
					},
					{
						ctor: '::',
						_0: A2(
							_elm_lang$html$Html$input,
							{
								ctor: '::',
								_0: _elm_lang$html$Html_Attributes$id(
									_user$project$Chore$makeId(chore)),
								_1: {
									ctor: '::',
									_0: _elm_lang$html$Html_Attributes$value(
										_user$project$Chore$description(chore.changedchore)),
									_1: {
										ctor: '::',
										_0: _elm_lang$html$Html_Events$onInput(_user$project$Chore$StoreChanges),
										_1: {
											ctor: '::',
											_0: _elm_lang$html$Html_Events$onBlur(_user$project$Chore$CommitChange),
											_1: {
												ctor: '::',
												_0: _user$project$Chore$onKeyDown(
													_user$project$Chore$enterKey(_user$project$Chore$CommitChange)),
												_1: {ctor: '[]'}
											}
										}
									}
								}
							},
							{ctor: '[]'}),
						_1: {ctor: '[]'}
					}),
				_1: {ctor: '[]'}
			}
		});
};
