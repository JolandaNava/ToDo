/* attempting to make a css file for the todo list */

/* The following css is taken from the todomvc github index.ccs file */ 
html,
body {
	margin: 0;
	padding: 0;
}

button {
	margin: 0;
	padding: 0;
	border: 0;
	background: none;
	font-size: 100%;
	vertical-align: baseline;
	font-family: inherit;
	font-weight: inherit;
	color: inherit;
	-webkit-appearance: none;
	appearance: none;
	-webkit-font-smoothing: antialiased;
	-moz-osx-font-smoothing: grayscale;
}

input:focus, button:focus {
    outline: none;
}

body {
	font: 14px 'Helvetica Neue', Helvetica, Arial, sans-serif;
	line-height: 1.4em;
	background: #f5f5f5;
	color: #4d4d4d;
	min-width: 230px;
	max-width: 550px;
	margin: 0 auto;
	-webkit-font-smoothing: antialiased;
	-moz-osx-font-smoothing: grayscale;
    font-weight: 300;
}

/* end of stolen code */

h1 {
    font: 100px 'Helvetica Neue', Helvetica, Arial, sans-serif;
    color: #e9d9d9;
    font-weight: 100;
    text-align: center;
    padding: 0px;
    border: 0px;
    margin : 20px;

}

::placeholder {
    font: 23px 'Helvetica Neue', Helvetica, Arial, sans-serif;
    line-height: 1.4em;
    color: #E6E6E6;
    font-style: italic;
    font-weight: 200;
}

ul {
    list-style: none;
    font: 23px 'Helvetica Neue', Helvetica, Arial, sans-serif;
    color: #242424;
    font-weight: 200;
    padding: 0px;
    border: 0px;
    margin : 0px;
}


.toggle {
    width: 60px;
    height: 60px;
    padding: 0px;
    border: 0px;
    margin : 0px;
}

.header, .chore, .editing-chore, .footer {
    background: #ffffff;
    width: 560px;
    height: 60px;
    padding: 0px;
    border: 0px;
    margin: 0px;
}

.chore, .footer , .editing-chore {
    box-shadow: 2px 2px 5px #ceccccad, -2px 2px 5px #ceccccad;
}

.header {
    box-shadow: 2px 2px 5px #ceccccad, -2px 2px 5px #ceccccad, 0px -1px 2px #ceccccad inset;
}

.editing-chore input {
    box-shadow: 1px 1px 3px #a39999 inset, -1px -1px 3px #a39999 inset, 1px 1px #a39999 inset, -1px -1px #a39999 inset;
}

.newchore, .editing-chore input {
    font: 23px 'Helvetica Neue', Helvetica, Arial, sans-serif;
    line-height: 1.4em;
    background: #ffffff;
    color: #242424;
    font-weight: 200;
    float: right;
    width: 500px;
}

.newchore {
    vertical-align: middle;
    height: 55px;
    padding: 0px;
    border: 0px;
    margin: 0px;
}

.editing-chore input {
    height: 60px;
    padding: 0px 0px 0px 15px;
    border: 0px;
    margin: 0px;
}


.toggle-all {
    padding: 0px;
    border: 0px;
    margin : 0px;
    background: #ffffff;
    width: 12px;
    height: 12px;
    position: relative;
    left: 20px;
    top: 12px;
    border: solid #737373;
    border-width: 0 4px 4px 0;
    display: inline-block;
    padding: 4px;
    transform: rotate(45deg);
    -webkit-transform: rotate(45deg) skewX(-5deg) skewY(-5deg);
}
/* To implement: button is normally lighter, becomes dark only when all chores are checked */


.chore label {
    line-height: 1.4em;
    width: 440px;
    max-width: 440px;
    height: 30px;
    padding: 15px 0px;
    border: 0px;
    margin: 0px;
    position: relative;
    left: 0px;
    top: 15px;
}

/* this renders the original checkbox invisible, so we can add a new version*/
.toggle {
    width: 60px;
    height: 60px;
    padding: 12px 0px 0px 12px;
    border: 0px;
    margin: 0px;
    position: relative;
    top: 0px;
    float: left ;
	border: none;
	-webkit-appearance: none;
	appearance: none;
}

/* the following two declarations are from the todomvc file.  
I know they are defining a picture in SVG so I can use it as the checkbox, 
however, I am not sure what the xmlns tag is doing, is it fetching the svg language?
*/
.toggle:after {
	content: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" width="40" height="40" viewBox="-10 -10 135 135"><circle cx="50" cy="50" r="50" fill="none" stroke="#ededed" stroke-width="3"/></svg>');
}

.toggle:checked:after {
	content: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" width="40" height="40" viewBox="-10 -10 135 135"><circle cx="50" cy="50" r="50" fill="none" stroke="#bddad5" stroke-width="3"/><path fill="#5dc2af" d="M72 25L42 71 27 56l-4 4 20 20 34-52z"/></svg>');
}

/* delete chore, x button*/
.chore button {
    width: 60px;
    height: 60px;
    float: right;
    font: 30px;
    color: transparent;
}

li:hover .chore button {
    color: #851e1e;
}


.footer {
    display: flex;
    justify-content: space-between;
    align-items: center;
    height: 50px;
}

.items-left {
    width: 90px;
    height: 50px;
    margin: 0px 40px 0px 20px;
    text-align: left;
    position: relative;
    left: 0px;
    top: 16px;
}

.view {
    height: 30px;
    padding: 0px 7px 0px 7px;
    border: 1px solid transparent;
    border-radius: 3px;
}

.view:hover {
    border: 1px solid #ECD7D7;
}

/* the 'selected' pseudo argument does not look like it's working right now - i am not sure why yet */
.view:selected {
    background: green;
}

.clear-completed {
    width: 120px;
    height: 30px;
    margin: 0px 20px 0px 30px;
}

.clear-completed:hover {
    text-decoration: underline;
}


/* NEXT STEPS:
    chore / editing-chore should display appropriately (instert a if/then clause on the elm side for the view?)
    display buttons only when action is possible (elm side)
    toggle-all button to change color when all chores are checked
    ~ delete button to be a real x not text
    ~ fix shadows around boxes
    chore height to change is text is long and wraps
    chore text to wrap when its max lenght is reached (now goes further) 
    when a view is selected the corresponding button is highlighted

*/